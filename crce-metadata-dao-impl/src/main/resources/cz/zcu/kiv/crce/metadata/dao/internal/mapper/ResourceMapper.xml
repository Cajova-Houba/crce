<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cz.zcu.kiv.crce.metadata.dao.internal.mapper.ResourceMapper">

    <!-- Resource -->
    <resultMap type="cz.zcu.kiv.crce.metadata.dao.internal.db.DbResource" id="resourceResultMap">
        <id property="resourceId" column="resource_id"/>
        <id property="repositoryId" column="repository_id"/>
        <id property="id" column="id"/>
        <id property="uri" column="uri"/>
    </resultMap>
    <select id="selectResourceByUri" parameterType="String" resultMap="resourceResultMap">
        SELECT resource_id, id, uri
        FROM resource
        WHERE uri = #{uri}
    </select>

    <select id="selectResourcesByRepositoryId" parameterType="Long" resultMap="resourceResultMap">
        SELECT resource_id, id, uri
        FROM resource
        WHERE repository_id = #{repositoryId}
    </select>

    <select id="selectResourceById" parameterType="String" resultMap="resourceResultMap">
        SELECT resource_id, id, uri
        FROM resource
        WHERE id = #{id}
    </select>

    <!-- Capability -->
    <resultMap type="cz.zcu.kiv.crce.metadata.dao.internal.db.DbCapability" id="capabilityResultMap">
        <id column="capability_id" property="capabilityId"/>
        <id column="parent_capability_id" property="parentCapabilityId"/>
        <id column="resource_id" property="resourceId"/>
        <id column="level" property="level"/>
        <id column="id" property="id"/>
        <id column="namespace" property="namespace"/>
    </resultMap>
    <select id="selectCapabilities" parameterType="Long" resultMap="capabilityResultMap">
        SELECT capability_id, parent_capability_id, resource_id, level, id, namespace
        FROM capability
        WHERE resource_id = #{resourceId}
        ORDER BY level
    </select>

    <resultMap type="cz.zcu.kiv.crce.metadata.dao.internal.db.DbAttribute" id="capabilityAttributesResultMap">
        <id column="capability_id" property="entityId"/>
        <id column="name" property="name"/>
        <id column="list_index" property="listIndex"/>
        <id column="type" property="type"/>
        <id column="operator" property="operator"/>
        <id column="string_value" property="stringValue"/>
        <id column="long_value" property="longValue"/>
        <id column="double_value" property="doubleValue"/>
        <id column="version_major_value" property="versionMajorValue"/>
        <id column="version_minor_value" property="versionMinorValue"/>
        <id column="version_micro_value" property="versionMicroValue"/>
    </resultMap>
    <select id="selectCapabilityAttributes" parameterType="Long" resultMap="capabilityAttributesResultMap">
        SELECT capability_id, name, list_index, type, operator, string_value, long_value, double_value,
          version_major_value, version_minor_value, version_micro_value
        FROM capability_attribute
        WHERE capability_id = #{capabilityId}
        ORDER BY name, list_index
    </select>

    <resultMap type="cz.zcu.kiv.crce.metadata.dao.internal.db.DbDirective" id="capabilityDirectivesResultMap">
        <id column="capability_id" property="entityId"/>
        <id column="name" property="name"/>
        <id column="value" property="value"/>
    </resultMap>
    <select id="selectCapabilityDirectives" parameterType="Long" resultMap="capabilityDirectivesResultMap">
        SELECT capability_id, name, value
        FROM capability_directive
        WHERE capability_id = #{requirementId}
    </select>

    <!-- Requirement -->
    <resultMap type="cz.zcu.kiv.crce.metadata.dao.internal.db.DbRequirement" id="requirementResultMap">
        <id column="requirement_id" property="requirementId"/>
        <id column="parent_requirement_id" property="parentRequirementId"/>
        <id column="resource_id" property="resourceId"/>
        <id column="level" property="level"/>
        <id column="id" property="id"/>
        <id column="namespace" property="namespace"/>
    </resultMap>
    <select id="selectRequirements" parameterType="Long" resultMap="requirementResultMap">
        SELECT requirement_id, parent_requirement_id, resource_id, level, id, namespace
        FROM requirement
        WHERE resource_id = #{resourceId}
        ORDER BY level
    </select>

    <resultMap type="cz.zcu.kiv.crce.metadata.dao.internal.db.DbAttribute" id="requirementAttributesResultMap">
        <id column="requirement_id" property="entityId"/>
        <id column="name" property="name"/>
        <id column="attribute_index" property="attributeIndex"/>
        <id column="list_index" property="listIndex"/>
        <id column="type" property="type"/>
        <id column="operator" property="operator"/>
        <id column="string_value" property="stringValue"/>
        <id column="long_value" property="longValue"/>
        <id column="double_value" property="doubleValue"/>
        <id column="version_major_value" property="versionMajorValue"/>
        <id column="version_minor_value" property="versionMinorValue"/>
        <id column="version_micro_value" property="versionMicroValue"/>
    </resultMap>
    <select id="selectRequirementAttributes" parameterType="Long" resultMap="requirementAttributesResultMap">
        SELECT requirement_id, name, attribute_index, list_index, type, operator, string_value, long_value, double_value,
          version_major_value, version_minor_value, version_micro_value
        FROM requirement_attribute
        WHERE requirement_id = #{requirementId}
        ORDER BY name, attribute_index, list_index
    </select>

    <resultMap type="cz.zcu.kiv.crce.metadata.dao.internal.db.DbDirective" id="requirementDirectivesResultMap">
        <id column="requirement_id" property="entityId"/>
        <id column="name" property="name"/>
        <id column="value" property="value"/>
    </resultMap>
    <select id="selectRequirementDirectives" parameterType="Long" resultMap="requirementDirectivesResultMap">
        SELECT requirement_id, name, value
        FROM requirement_directive
        WHERE requirement_id = #{requirementId}
    </select>

    <!-- Capability property -->
    <resultMap type="cz.zcu.kiv.crce.metadata.dao.internal.db.DbProperty" id="capabilityPropertyResultMap">
        <id column="property_id" property="propertyId"/>
        <id column="capability_id" property="parentId"/>
        <id column="id" property="id"/>
        <id column="namespace" property="namespace"/>
    </resultMap>
    <select id="selectCapabilityProperties" parameterType="Long" resultMap="capabilityPropertyResultMap">
        SELECT property_id, capability_id, id, namespace
        FROM capability_property
        WHERE capability_id = #{capabilityId}
    </select>

    <resultMap type="cz.zcu.kiv.crce.metadata.dao.internal.db.DbAttribute" id="capabilityPropertyAttributesResultMap">
        <id column="property_id" property="entityId"/>
        <id column="name" property="name"/>
        <id column="list_index" property="listIndex"/>
        <id column="type" property="type"/>
        <id column="operator" property="operator"/>
        <id column="string_value" property="stringValue"/>
        <id column="long_value" property="longValue"/>
        <id column="double_value" property="doubleValue"/>
        <id column="version_major_value" property="versionMajorValue"/>
        <id column="version_minor_value" property="versionMinorValue"/>
        <id column="version_micro_value" property="versionMicroValue"/>
    </resultMap>
    <select id="selectCapabilityPropertyAttributes" parameterType="Long" resultMap="capabilityPropertyAttributesResultMap">
        SELECT property_id, name, list_index, type, operator, string_value, long_value, double_value,
          version_major_value, version_minor_value, version_micro_value
        FROM capability_property_attribute
        WHERE property_id = #{propertyId}
        ORDER BY name, list_index
    </select>

    <!-- Resource property -->
    <resultMap type="cz.zcu.kiv.crce.metadata.dao.internal.db.DbProperty" id="resourcePropertyResultMap">
        <id column="property_id" property="propertyId"/>
        <id column="resource_id" property="parentId"/>
        <id column="id" property="id"/>
        <id column="namespace" property="namespace"/>
    </resultMap>
    <select id="selectResourceProperties" parameterType="Long" resultMap="resourcePropertyResultMap">
        SELECT property_id, resource_id, id, namespace
        FROM resource_property
        WHERE resource_id = #{resourceId}
    </select>

    <resultMap type="cz.zcu.kiv.crce.metadata.dao.internal.db.DbAttribute" id="resourcePropertyAttributesResultMap">
        <id column="property_id" property="entityId"/>
        <id column="name" property="name"/>
        <id column="list_index" property="listIndex"/>
        <id column="type" property="type"/>
        <id column="operator" property="operator"/>
        <id column="string_value" property="stringValue"/>
        <id column="long_value" property="longValue"/>
        <id column="double_value" property="doubleValue"/>
        <id column="version_major_value" property="versionMajorValue"/>
        <id column="version_minor_value" property="versionMinorValue"/>
        <id column="version_micro_value" property="versionMicroValue"/>
    </resultMap>
    <select id="selectResourcePropertyAttributes" parameterType="Long" resultMap="resourcePropertyAttributesResultMap">
        SELECT property_id, name, list_index, type, operator, string_value, long_value, double_value,
          version_major_value, version_minor_value, version_micro_value
        FROM resource_property_attribute
        WHERE property_id = #{propertyId}
        ORDER BY name, list_index
    </select>


    <delete id="deleteResourceByResourceId" parameterType="Long">
        DELETE FROM resource WHERE resource_id = #{id}
    </delete>

    <delete id="deleteResourceById" parameterType="String">
        DELETE FROM resource WHERE id = #{id}
    </delete>

    <!-- Inserts -->

    <insert id="insertResource" parameterType="cz.zcu.kiv.crce.metadata.dao.internal.db.DbResource">
        insert into resource (resource_id, repository_id, id, uri) values (
          #{resourceId}, #{repositoryId}, #{id}, #{uri}
        )
    </insert>

    <insert id="insertCapability" parameterType="cz.zcu.kiv.crce.metadata.dao.internal.db.DbCapability">
        insert into capability (capability_id, parent_capability_id, resource_id, level, id, namespace) values (
          #{capabilityId}, #{parentCapabilityId}, #{resourceId}, #{level}, #{id}, #{namespace}
        )
    </insert>

    <insert id="insertRequirement" parameterType="cz.zcu.kiv.crce.metadata.dao.internal.db.DbRequirement">
        insert into requirement (requirement_id, parent_requirement_id, resource_id, level, id, namespace) values (
          #{requirementId}, #{parentRequirementId}, #{resourceId}, #{level}, #{id}, #{namespace}
        )
    </insert>

    <insert id="insertResourceProperty" parameterType="cz.zcu.kiv.crce.metadata.dao.internal.db.DbProperty">
        insert into resource_property (property_id, resource_id, id, namespace) values (
          #{propertyId}, #{parentId}, #{id}, #{namespace}
        )
    </insert>

    <insert id="insertCapabilityProperty" parameterType="cz.zcu.kiv.crce.metadata.dao.internal.db.DbProperty">
        insert into capability_property (property_id, capability_id, id, namespace) values (
          #{propertyId}, #{parentId}, #{id}, #{namespace}
        )
    </insert>

    <insert id="insertCapabilityAttributes" parameterType="java.util.List">
        INSERT INTO capability_attribute (
          capability_id, name, list_index, type, operator, string_value, long_value, double_value,
          version_major_value, version_minor_value, version_micro_value
        ) VALUES
        <foreach collection="list" item="item" index="index" open="(" close=")" separator="), (">
            #{item.entityId, jdbcType=BIGINT},
            #{item.name, jdbcType=VARCHAR},
            #{item.listIndex, jdbcType=SMALLINT},
            #{item.type, jdbcType=SMALLINT},
            #{item.operator, jdbcType=SMALLINT},
            #{item.stringValue, jdbcType=VARCHAR},
            #{item.longValue, jdbcType=BIGINT},
            #{item.doubleValue, jdbcType=DOUBLE},
            #{item.versionMajorValue, jdbcType=INTEGER},
            #{item.versionMinorValue, jdbcType=INTEGER},
            #{item.versionMicroValue, jdbcType=INTEGER}
        </foreach>
    </insert>

    <insert id="insertRequirementAttributes" parameterType="java.util.List">
        INSERT INTO requirement_attribute (
          requirement_id, name, attribute_index, list_index, type, operator, string_value, long_value, double_value,
          version_major_value, version_minor_value, version_micro_value
        ) VALUES
        <foreach collection="list" item="item" index="index" open="(" close=")" separator="), (">
            #{item.entityId, jdbcType=BIGINT},
            #{item.name, jdbcType=VARCHAR},
            #{item.attributeIndex, jdbcType=SMALLINT},
            #{item.listIndex, jdbcType=SMALLINT},
            #{item.type, jdbcType=SMALLINT},
            #{item.operator, jdbcType=SMALLINT},
            #{item.stringValue, jdbcType=VARCHAR},
            #{item.longValue, jdbcType=BIGINT},
            #{item.doubleValue, jdbcType=DOUBLE},
            #{item.versionMajorValue, jdbcType=INTEGER},
            #{item.versionMinorValue, jdbcType=INTEGER},
            #{item.versionMicroValue, jdbcType=INTEGER}
        </foreach>
    </insert>

    <insert id="insertResourcePropertyAttributes" parameterType="java.util.List">
        INSERT INTO resource_property_attribute (
          property_id, name, list_index, type, operator, string_value, long_value, double_value,
          version_major_value, version_minor_value, version_micro_value
        ) VALUES
        <foreach collection="list" item="item" index="index" open="(" close=")" separator="), (">
            #{item.entityId, jdbcType=BIGINT},
            #{item.name, jdbcType=VARCHAR},
            #{item.listIndex, jdbcType=SMALLINT},
            #{item.type, jdbcType=SMALLINT},
            #{item.operator, jdbcType=SMALLINT},
            #{item.stringValue, jdbcType=VARCHAR},
            #{item.longValue, jdbcType=BIGINT},
            #{item.doubleValue, jdbcType=DOUBLE},
            #{item.versionMajorValue, jdbcType=INTEGER},
            #{item.versionMinorValue, jdbcType=INTEGER},
            #{item.versionMicroValue, jdbcType=INTEGER}
        </foreach>
    </insert>

    <insert id="insertCapabilityPropertyAttributes" parameterType="java.util.List">
        INSERT INTO capability_property_attribute (
          property_id, name, list_index, type, operator, string_value, long_value, double_value,
          version_major_value, version_minor_value, version_micro_value
        ) VALUES
        <foreach collection="list" item="item" index="index" open="(" close=")" separator="), (">
            #{item.entityId, jdbcType=BIGINT},
            #{item.name, jdbcType=VARCHAR},
            #{item.listIndex, jdbcType=SMALLINT},
            #{item.type, jdbcType=SMALLINT},
            #{item.operator, jdbcType=SMALLINT},
            #{item.stringValue, jdbcType=VARCHAR},
            #{item.longValue, jdbcType=BIGINT},
            #{item.doubleValue, jdbcType=DOUBLE},
            #{item.versionMajorValue, jdbcType=INTEGER},
            #{item.versionMinorValue, jdbcType=INTEGER},
            #{item.versionMicroValue, jdbcType=INTEGER}
        </foreach>
    </insert>

    <insert id="insertCapabilityDirectives" parameterType="java.util.List">
        INSERT INTO capability_directive (capability_id, name, value) VALUES
        <foreach collection="list" item="item" index="index" open="(" close=")" separator="), (">
            #{item.entityId, jdbcType=BIGINT},
            #{item.name, jdbcType=VARCHAR},
            #{item.value, jdbcType=VARCHAR},
        </foreach>
    </insert>

    <insert id="insertRequirementDirectives" parameterType="java.util.List">
        INSERT INTO requirement_directive (requirement_id, name, value) VALUES
        <foreach collection="list" item="item" index="index" open="(" close=")" separator="), (">
            #{item.entityId, jdbcType=BIGINT},
            #{item.name, jdbcType=VARCHAR},
            #{item.value, jdbcType=VARCHAR},
        </foreach>
    </insert>

</mapper>