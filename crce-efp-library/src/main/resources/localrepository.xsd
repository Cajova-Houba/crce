<?xml version="1.0" encoding="ISO-8859-1" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

<!--  definition for Gamma -->
    <xs:simpleType name="GammaTypeElement">
        <xs:restriction base="xs:string">
            <xs:enumeration value="BooleanGamma"/>
            <xs:enumeration value="ComplexTypeGamma"/>
            <xs:enumeration value="EnumGamma"/>
            <xs:enumeration value="NumberGamma"/>
            <xs:enumeration value="NumberIntervalGamma"/>
            <xs:enumeration value="StringGamma"/>
            <xs:enumeration value="UserGamma"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="GammaElement">
        <xs:sequence>
            <xs:element name="function" type="xs:string" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="type" type="GammaTypeElement" use="optional"/>
    </xs:complexType>






<!-- definitions for efps -->

    <!-- definition of reference to EFP in concrete GR(using in DerivedEFP or LR) -->
    <xs:complexType name="ReferenceToEFPElement">
        <xs:attribute name="id" type="xs:positiveInteger"></xs:attribute>
    </xs:complexType>

    <!-- definitions for list of references to EFPs -->
    <xs:complexType name="PropertyReferencesElement">
        <xs:sequence>
            <xs:element name="property" type="ReferenceToEFPElement" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- definitions for EFP -->
    <xs:complexType name="ListOfNamesElement">
        <xs:sequence>
            <xs:element name="name" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MetaElement">
        <xs:sequence>
            <xs:element name="unit" type="xs:string" minOccurs="0" maxOccurs="1"/>
            <xs:element name="names" type="ListOfNamesElement"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="EfpTypeOfValueElement">
        <xs:restriction base="xs:string">
            <xs:enumeration value="EfpBoolean"/>
            <xs:enumeration value="EfpComplex"/>
            <xs:enumeration value="EfpEnum"/>
            <xs:enumeration value="EfpNumberInterval"/>
            <xs:enumeration value="EfpNumber"/>
            <xs:enumeration value="EfpRatio"/>
            <xs:enumeration value="EfpSet"/>
            <xs:enumeration value="EfpString"/>
        </xs:restriction>
    </xs:simpleType>


    <!-- definitions for DerivedEFP -->
    <xs:complexType name="DerivedEFPElement">
        <xs:sequence>
            <xs:element name="valueType" type="EfpTypeOfValueElement"/>
            <xs:element name="meta" type="MetaElement"/>
            <xs:element name="gamma" type="GammaElement"/>
            <xs:element name="properties" type="PropertyReferencesElement"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:positiveInteger"/>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>


    <!-- definitions for SimpleEFP -->
    <xs:complexType name="SimpleEFPElement">
        <xs:sequence>
            <xs:element name="valueType" type="EfpTypeOfValueElement"/>
            <xs:element name="meta" type="MetaElement"/>
            <xs:element name="gamma" type="GammaElement"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:positiveInteger"/>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>






<!-- definition for GR -->
    <xs:complexType name="PropertiesElement">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="simpleEfp" type="SimpleEFPElement"/>
            <xs:element name="derivedEfp" type="DerivedEFPElement"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="GRElement">
        <xs:sequence>
            <xs:element name="properties" type="PropertiesElement" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:positiveInteger"/>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>




<!-- definitions for lr and assignments-->
    <!-- definition for LrSimpleAssignment -->
    <xs:complexType name="LrSimpleAssignmentElement">
        <xs:sequence>
            <xs:element name="efpValue" type="xs:string"/>
        </xs:sequence>

        <xs:attribute name="id" type="xs:positiveInteger"/>
        <xs:attribute name="efp_id" type="xs:positiveInteger"/>
        <xs:attribute name="valueName" type="xs:string"/>
    </xs:complexType>

    <!-- definition for LrDerivedAssignment -->
    <xs:complexType name="LrDerivedAssignmentElement">
        <xs:sequence>
            <xs:element name="efpValue" type="xs:string"/>
            <xs:element name="formula" type="xs:string" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>

        <xs:attribute name="id" type="xs:positiveInteger"/>
        <xs:attribute name="efp_id" type="xs:positiveInteger"/>
        <xs:attribute name="valueName" type="xs:string"/>
    </xs:complexType>

    <!-- definition for LR -->
    <xs:complexType name="LRElement">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="simpleAssignment" type="LrSimpleAssignmentElement"/>
            <xs:element name="derivedAssignment" type="LrDerivedAssignmentElement" />
        </xs:choice>
        <xs:attribute name="id" type="xs:positiveInteger"></xs:attribute>
        <xs:attribute name="name" type="xs:string"></xs:attribute>
    </xs:complexType>




   <!-- definition for other value -->
    <xs:complexType name="OtherValueElement">
        <xs:sequence>
            <xs:element name="value" type="xs:string"/>
        </xs:sequence>

        <xs:attribute name="id" type="xs:nonNegativeInteger"/>
    </xs:complexType>


    <!-- definition for itemset with other values -->
    <xs:complexType name="OtherValues">
        <xs:sequence>
            <xs:element name="otherValue" type="OtherValueElement" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>





    <!-- definition for root element -->
    <xs:complexType name="RepositoryElement">
        <xs:sequence>
            <xs:element name="globalRegistr" type="GRElement"/>
            <xs:element name="localRegistr" type="LRElement" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>



    <xs:complexType name="RepositoriesElement">
        <xs:sequence>
            <xs:element name="listOfRepositories" type="RepositoryElement" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="otherValues" type="OtherValues" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="localRepository" type="RepositoriesElement"/>
</xs:schema>