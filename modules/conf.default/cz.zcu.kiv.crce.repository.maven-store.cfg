# URI of CRCE local maven repository
#
# Examples Local:
# local.maven.store.uri=file:/C:/mvn_store
# local.maven.store.uri=C:\\mvn_store
# local.maven.store.uri=mvn_store
# 
local.maven.store.uri=G:\\mvn_store

# Name of local store
local.store.name=local_repository

# URI of CRCE maven repository indexing context
#
# Examples:
# indexing.context.uri=file:/C:/mvn_store_index
# indexing.context.uri=C:\\mvn_store_index
# indexing.context.uri=mvn_store_index
# 
indexing.context.uri=G:\\mvn_store_index


# URI of CRCE remote maven repository
#
# Examples Remote:
# remote.maven.store.uri=http://maven.kalwi.eu/repo/releases
# remote.maven.store.uri=http://repo1.maven.org/maven2
# remote.maven.store.uri=http://relisa-dev.kiv.zcu.cz:8081/nexus/content/groups/public
remote.maven.store.uri=http://relisa-dev.kiv.zcu.cz:8081/nexus/content/groups/public

# Name of remote store
remote.store.name=relisa

# Boolean value for update default set repository
# Examples
# update.repository=false
# update.repository=0
update.repository=false

# Define main maven repository local or remote
#
# Examples
# use.remote.maven.store.default=1
# use.remote.maven.store.default=true
use.remote.maven.store.default=true

# Set finding dependencies only direct or nested hierarchy
# true = DFS
# false = BFS
aether.find.dependency.hierarchy=false

# Aether switch to download only POM or JARs
# false = aether will try solve artifact by POMS - much faster
# true =  aether will try solve artifact by JAR
aether.resolve.artifacts=false

# Enum which Artifact versions will be resolved
#
# Enum variants
# artifact.resolve=all
# artifact.resolve=newest
# artifact.resolve=highest-major
# artifact.resolve=highest-minor
# artifact.resolve=highest-micro
# artifact.resolve=highest-qualifier
# 
# Must be set also resolve parameter # 
# artifact.resolve=gav
# artifact.resolve.param=org.sonatype.nexus:nexus-api:1.5.0
# 
# artifact.resolve=groupid
# artifact.resolve.param=org.sonatype.nexus
# 
# artifact.resolve=groupid-artifactid
# artifact.resolve.param=org.sonatype.nexus:nexus-api
# 
# Resolve all artifacts with GID an AID and minimal def.version
# artifact.resolve=groupid-artifactid-minversion
# artifact.resolve.param=org.sonatype.nexus:nexus-api:1.2.0

artifact.resolve=gav
artifact.resolve.param=org.sonatype.nexus:nexus-api:1.5.0
