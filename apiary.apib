FORMAT: 1A

# CRCE API
Web Service API specification for **C**omponent **R**epository supporting **C**ompabitility **E**valuation.

Project URL: https://www.assembla.com/spaces/crce

Source Code: http://github.com/ReliSA/crce/

# Group Resources
Bundle resources of the CRCE API represent the actual component binaries.

## Resources Collection [/resources]

+ Model (application/xml)
   
   + Body
   
            <resources>
                <resource>
                    <capability namespace='crce.identity' uuid='550e8400-e29b-41d4-a716-446655440000'>
                        <attribute name="name" value="org.obcc.parking.gate" />
                        <attribute name="crce.type" value="osgi,jar" type="list" />
                        <attribute name="provider" value="cz.zcu.kiv" />
                        <attribute name="version.original" type="Version" value="1.0.0" />
                        <attribute name="crce.categories" value="initial-version,versioned,osgi" type="list" />
                        <attribute name="crce.status" value="stored" />
                    </capability>
                    
                    <link rel="self" href="/resources/org.obcc.parking.gate/1.0.0"/>
                    <link rel="meta-data" href="/meta-data/org.obcc.parking.gate/1.0.0"/>                
                </resource>
                <resource>
                    <capability namespace='crce.identity' uuid='550e8400-e29b-41d4-a716-446655440000'>
                        <attribute name="name" value="org.obcc.parking.gate" />
                        <attribute name="crce.type" value="osgi,jar" type="list" />
                        <attribute name="provider" value="cz.zcu.kiv" />
                        <attribute name="version.original" type="Version" value="1.1.0" />
                        <attribute name="crce.categories" value="versioned,osgi" type="list" />
                        <attribute name="crce.status" value="stored" />
                    </capability>
                    
                    <link rel="self" href="/resources/org.obcc.parking.gate/1.1.0"/>
                    <link rel="meta-data" href="/meta-data/org.obcc.parking.gate/1.1.0"/>                
                </resource>
                <resource>
                    <capability namespace='crce.identity' uuid='550e8400-e29b-41d4-a716-446655440000'>
                        <attribute name="name" value="org.obcc.parking.statistics" />
                        <attribute name="crce.type" value="osgi,jar" type="list" />
                        <attribute name="provider" value="cz.zcu.kiv" />
                        <attribute name="version.original" type="Version" value="1.0.0" />
                        <attribute name="crce.categories" value="initial-version,versioned,osgi" type="list" />
                        <attribute name="crce.status" value="stored" />
                    </capability>
                    
                    <link rel="self" href="/resources/org.obcc.parking.statistics/1.0.0"/>
                    <link rel="meta-data" href="/meta-data/org.obcc.parking.statistics/1.0.0"/>                
                </resource>
                
                <link rel="self" href="/resources"/>
            </resources>                

### Upload a Bundle [POST]
+ Request (multipart/form-data)

        *Component binary file*

+ Response 202

## Resources Collection [/resources/{name}]

+ Parameters
    + name (optional, string, `org.obcc.parking.gate`) ... Fully qualified name of the partiuclar component. E.g. OSGi "symbolic-name";
    
### List all Resources [GET]
Returns list of all components in the repository with links to their binaries. Same view as /meta-data collection, just from different
perspective.

+ Response 200

    [Resources Collection][]

## Bundle [/resources/{name}/{version}]
A particular component revision.

+ Parameters
    + name (required, string, `org.obcc.parking.gate`) ... Fully qualified name of the partiuclar component. E.g. OSGi "symbolic-name";
    + version (required, Version, `1.0.4`) ... Version identifier;
    
### Download binary [GET]
+ Response 200 (application/octet-stream)

    + Headers
    
            Content-Disposition: attachement; filename="org-obcc-parking-gate-1.0.4.jar"
    + Body
            
            ***component binary***
            
# Group Meta-Data
Meta-Data describing resources stored within the repository. Their capabilities, requirements and other vital pieces of information.

## Bundle Meta-Data [/meta-data/{name}/{version}]
A particular component revision.

+ Model (application/xml)

    Model for meta-data of a single resource.
    
    + Body
    
            <resource>

                <!-- Resource meta-data as defined at https://www.assembla.com/spaces/crce/wiki/Metadata_example_-_core -->
                
                <link rel="self" href="/meta-data/org.obcc.parking.gate/1.0.4"/>
                <link rel="resource" href="/resources/org.obcc.parking.gate/1.0.4"/>
                <link rel="diffs" href="/meta-data/org.obcc.parking.gate/1.0.4/diffs"/>
                <link rel="compatible" href="/meta-data/org.obcc.parking.gate/1.0.4/compatible"/>            
            </resource>            

+ Parameters
    + name (required, string, `org.obcc.parking.gate`) ... Fully qualified name of the partiuclar component. E.g. OSGi "symbolic-name";
    + version (required, Version, `1.0.4`) ... Version identifier;
                
### Get Meta-Data for Bundle [GET]
+ Response 200 

    [Bundle Meta-Data][]       

## Meta-Data Collection [/meta-data/{name}]

+ Parameters
    + name (optional, string, `org.obcc.parking.gate`) ... Fully qualified name of the partiuclar component. E.g. OSGi "symbolic-name";

+ Model (application/xml)
    
    Meta-Data Collection sample model.
    
    + Body
    
            <resources>
                <resource>
                    <capability namespace='crce.identity' uuid='550e8400-e29b-41d4-a716-446655440000'>
                        <attribute name="name" value="org.obcc.parking.gate" />
                        <attribute name="crce.type" value="osgi,jar" type="list" />
                        <attribute name="provider" value="cz.zcu.kiv" />
                        <attribute name="version.original" type="Version" value="1.0.0" />
                        <attribute name="crce.categories" value="initial-version,versioned,osgi" type="list" />
                        <attribute name="crce.status" value="stored" />
                    </capability>
                    
                    <link rel="self" href="/meta-data/org.obcc.parking.gate/1.0.0"/>
                    <link rel="resource" href="/resources/org.obcc.parking.gate/1.0.0"/>
                </resource>
                <resource>
                    <capability namespace='crce.identity' uuid='550e8400-e29b-41d4-a716-446655440000'>
                        <attribute name="name" value="org.obcc.parking.gate" />
                        <attribute name="crce.type" value="osgi,jar" type="list" />
                        <attribute name="provider" value="cz.zcu.kiv" />
                        <attribute name="version.original" type="Version" value="1.1.0" />
                        <attribute name="crce.categories" value="versioned,osgi" type="list" />
                        <attribute name="crce.status" value="stored" />
                    </capability>
                    
                    <link rel="self" href="/meta-data/org.obcc.parking.gate/1.1.0"/>
                    <link rel="resource" href="/resources/org.obcc.parking.gate/1.1.0"/>
                </resource>
                <resource>
                    <capability namespace='crce.identity' uuid='550e8400-e29b-41d4-a716-446655440000'>
                        <attribute name="name" value="org.obcc.parking.statistics" />
                        <attribute name="crce.type" value="osgi,jar" type="list" />
                        <attribute name="provider" value="cz.zcu.kiv" />
                        <attribute name="version.original" type="Version" value="1.0.0" />
                        <attribute name="crce.categories" value="initial-version,versioned,osgi" type="list" />
                        <attribute name="crce.status" value="stored" />
                    </capability>
                    
                    <link rel="self" href="/meta-data/org.obcc.parking.statistics/1.0.0"/>
                    <link rel="resource" href="/resources/org.obcc.parking.statistics/1.0.0"/>
                </resource>
                
                <link rel="self" href="/meta-data"/>
            </resources>

### List All Meta-Data [GET]
Returns list of all components in the repository with links to their meta-data. Same view as /resources collection, just from different
perspective.

+ Response 200

    [Meta-Data Collection][]
                  
## Meta-Data describing differences between Resources [/meta-data/{name}/{version}/diffs{?otherName}{?otherVersion}]
Meta-Data with information about API differences between resources.

+ Parameters
    + name (required, string, `org.obcc.parking.gate`) ... Fully qualified name of the partiuclar component. E.g. OSGi "symbolic-name";
    + version (required, Version, `1.0.4`) ... Version identifier;
    + otherName (optional, string, `com.kknd.park.gate`) ... Name of the other compared component;
    + otherVersion (optional, Version, `1.0.0`) ... Version identifier of the second component;
     

### Get Diffs for Resource [GET]
+ Response 200 (application/xml)

        <diffs>
            <!-- Diff meta-data as defined at https://www.assembla.com/spaces/crce/wiki/Metadata_example_-_compatibility -->
        </diffs>
        
## Meta-Data for a compatible Resource [/meta-data/{name}/{version}/compatible{?operation}]
Returns meta-data for a resource compatible with the one specified using `name` and `version` parameters. While
there might be many compatible resources in the repository, at most one is returned. Rule, by which the resource
is chosen is determined by the `operation` parameter, which can have the following values:

- any               any compatible resource is returned, no specification of the relationship between the original and returned version
- lowest            lowest compatible version is returned
- downgrade         nearest compatible version lower than the original is returned
- upgrade (default) nearest compatible version higher than the original is returned   
- highest           highest compatible version is returned

+ Parameters
    + name (required, string, `org.obcc.parking.gate`) ... Fully qualified name of the partiuclar component. E.g. OSGi "symbolic-name";
    + version (required, Version, `1.0.4`) ... Version identifier;
    + operation (optional, string) ... Specification of the operation you want the compatible resource for;

### Get Compatible Resource Meta-Data [GET]
+ Response 200
    
    [Resource Meta-Data][]